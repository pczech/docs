*******************************************************************************
diff
----
Compare files line by line

Make a patch:
cp -R dir.orig dir
Make your changes in dir
diff -rupN dir.orig dir > dir.patch

How to compare folders (no files content)
-----------------------------------------
find <dir1> | sort > dir1.list
find <dir2> | sort > dir2.list
diff dir1.list dir2.list > dir.diff


*******************************************************************************
dmesg
-----
Print kernel ring buffer

-c  - clear after printing

Older events are logged in the files /var/log/messages and /var/log/warn ?


*******************************************************************************
find <path> <opts>

opts:
-type f
    - find files
    
-name

-iname
  - like -name but the match is case insensitive.

Examples:

find
  - find any file and folder
  
find -type d
  - find directories
  
  
*******************************************************************************  
kill

-l  - list signals


*******************************************************************************
ln
--
Make links between files

ln [<options>] <target> <linkname>

-s  - symbolic link
-f  - force (remove existing destination files)


*******************************************************************************
lsmod
-----
Show status of modules in kernel

/proc/modules


*******************************************************************************
ps
--

aux - Show all running processes


*******************************************************************************
rename
------
Rename multiple files

Examples:

rename 's/$/.tmp/' *.*
  Add .tmp to all file with dot within the name.
  
rename 's/\.tmp$//' *.*.*
  Remove the .tmp suffix from those files


*******************************************************************************
pstree


*******************************************************************************
top
---
Display Linux processes


*******************************************************************************
scp
---
Copying from local to remote
scp <local_file> <user>@<host>:<directory>/<remote_file>

Copying from remote to local
scp <user>@<host>:<directory>/<remote_file> <local_file>


*******************************************************************************
shutdown
--------
 -r reboot
 TIME (now, +m, hh:mm)


*******************************************************************************
strace
------
strace <program>
strace -f <program>     - trace program with its childs
strace -p <pid>         - trace running program


*******************************************************************************
sudo
----
 -i - simulate initial login as root (changes the home directory to /root)


*******************************************************************************
sx
--
XMODEM file send

sx -vv <file> < /dev/ttyS0 > /dev/ttyS0


*******************************************************************************
tar
---

extract from archive to current folder
tar -xf file.tar[.<ANY>]
tar -xvf file.tar[.<ANY>]
tar -zxvf file.tar.gz      gzip
tar -jxvf file.tar.bz2     bzip2
tar -Jxvf file.tar.xz      LZMA2

extract from archive to given folder
tar -xf file.tar -C <folder>

If a folder <A> is archived in file.tar and you want to unpack the content of 
the folder without the folder itself to the folder <B>:
tar -xvf file.tar -C <B> --strip-components=1

compress directory:
tar -cvf file.tar directory_to_compress
tar -zcvf file.tar.gz directory_to_compress
tar -jcvf file.tar.bz2 directory_to_compress
tar -Jcvf file.tar.xz directory_to_compress


*******************************************************************************
uname
-----
Print system information 

-a  - print all information in the following order:      
      kernel name               : Linux
      network hostname          : Dell
      kernel release            : 3.13.0-30-generic
      kernel version            : #55-Ubuntu SMP Fri Jul 4 21:40:53 UTC 2014
      machine hardware name     : x86_64
      processor type            : x86_64
      hardware platform         : x86_64
      operating system          : GNU/Linux

Linux Dell 3.13.0-30-generic #55-Ubuntu SMP Fri Jul 4 21:40:53 UTC 2014 x86_64
x86_64 x86_64 GNU/Linux

*******************************************************************************
vi
--
vi <file> - edit/create <file>

Esc            command mode
h              move cursor one character to left
j              move cursor one line down
k              move cursor one line up
l              move cursor one character to right
w              move cursor one word to right
b              move cursor one word to left
0              move cursor to beginning of line
$              move cursor to end of line
nG             move cursor to line n
control-f      scroll forward one screen
control-b      scroll backward one screen
 
i              insert to left of current cursor position (end with ESC)
a              append to right of current cursor position (end with ESC)
dw             delete current word (end with ESC)
cw             change current word (end with ESC)
r              change current character
~              change case (upper-, lower-) of current character
     
dd             delete current line
D              delete portion of current line to right of the cursor
x              delete current character
ma             mark currrent position
d`a            delete everything from the marked position to here
`a             go back to the marked position
p              dump out at current place your last deletion (``paste'')
     
u              undo the last command 
.              repeat the last command 
     
J              combine (``join'') next line with this one
     
:w             write file to disk, stay in vi
:q!            quit VI, do not write file to disk,
ZZ             write file to disk, quit vi

:r filename    read in a copy of the specified file to the current
               buffer
     
/string        search forward for string (end with Enter)
?string        search backward for string (end with Enter)
n              repeat the last search (``next search'')
     
:s/s1/s2       replace (``substitute'') (the first) s1 in this line by s2
:lr/s/s1/s2/g  replace all instances of s1 in the line range lr by s2
               (lr is of form `a,b', where a and b are either explicit
               line numbers, or . (current line) or $ (last line)
:map k s       map the key k to a string of vi commands s (see below)
:abb s1 s2     expand the string s1 in append/insert mode to a string 
               s2 (see below)
%              go to the "mate," if one exists, of this parenthesis
               or brace or bracket (very useful for programmers!)
