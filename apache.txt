*******************************************************************************
Basics

install apache2

service apache2 restart

apache2ctl
----------
-l - list modules compiled into the server
-M - list loaded modules
-S - dump settings parsed from config files
-V - print the version and build parameters of apache2

a2enmod - enable module. Creates link in mods-enabled to corresponding config
          file in mods-available.
          
a2dismod - disable module. Deletes link in mods-enabled.


Ubuntu 14.04
------------
mod-status enabled. Open localhost/server-status to check server statistics.
See also /etc/apach2/mods-available/status.conf.

mpm-event enabled. See 'MPM Modules'.


*******************************************************************************
Configuration structure
-----------------------

   /etc/apache2/
   |-- apache2.conf
   |   `--  ports.conf
   |-- mods-enabled
   |   |-- *.load
   |   `-- *.conf
   |-- conf-enabled
   |   `-- *.conf
   `-- sites-enabled
       `-- *.conf


Config parameters
-----------------
Module: core

Options - controls which server features are available in a particular
          directory.
          http://httpd.apache.org/docs/current/mod/core.html#options
          
Options FollowSymLinks 
  The server will follow symbolic links in this directory.
  
Options ExecCGI
  Execution of CGI scripts using mod_cgi is permitted.
   
AllowOverride None
  .htaccess files are completely ignored.
AllowOverride All
  all directives are allowed in .htaccess files
  http://httpd.apache.org/docs/2.4/mod/core.html#allowoverride

Module: mime

AddHandler handler-name extension
  Maps the filename extensions to the specified handler. Files having the
  extension will be served by the specified handler-name. Handlers can either
  be built into the server or included in a module (e.g. fcgid-script).
  http://httpd.apache.org/docs/2.4/handler.html

Module: mod_authz_core

Require all denied
  Access is denied unconditionally.
Require all granted
  Access is allowed unconditionally.
Require local
  http://httpd.apache.org/docs/2.4/mod/mod_authz_core.html#require


*******************************************************************************
Virtual host configuration
--------------------------
Apache comes with a default virtual host file sites-available/000-default.conf
that can be used as a jumping off point. Copy it over to create a virtual host
file for each of your domains.

http://httpd.apache.org/docs/2.4/vhosts/


*******************************************************************************
MPM Modules
-----------
http://serverfault.com/questions/383526/how-do-i-select-which-apache-mpm-to-use/383634#383634
http://stackoverflow.com/questions/1623914/what-is-thread-safe-or-non-thread-safe-in-php
http://kb.parallels.com/en/113007
http://www.vps.net/blog/2013/04/08/apache-mpms-prefork-worker-and-event/

MPM Prefork (mpm-prefork)
-------------------------
A non-threaded, pre-forking web server. It is appropriate for sites that need
to avoid threading for compatibility with non-thread-safe libraries (PHP).

A single control process is responsible for launching child processes which
listen for connections and serve them when they arrive. Apache httpd always
tries to maintain several spare or idle server processes, which stand ready to
serve incoming requests. In this way, clients do not need to wait for a new
child processes to be forked before their requests can be served.

Config:
/etc/apache2/mods-available/mpm_worker.conf

http://httpd.apache.org/docs/current/mod/prefork.html


MPM Worker (mpm-worker)
-----------------------
TODO


MPM Event (mpm-event)
---------------------
This MPM tries to fix the 'keep alive problem' in HTTP. After a client
completes the first request, the client can keep the connection open, and send
further requests using the same socket. This can save significant overhead in
creating TCP connections. However, Apache HTTP Server traditionally keeps an
entire child process/thread waiting for data from the client, which brings its
own disadvantages. To solve this problem, this MPM uses a dedicated thread to
handle both the Listening sockets, all sockets that are in a Keep Alive state,
and sockets where the handler and protocol filters have done their work and the
only remaining thing to do is send the data to the client.

Config:
/etc/apache2/mods-available/mpm_event.conf

http://httpd.apache.org/docs/current/mod/event.html


*******************************************************************************
suexec
------
Apache module suExec his module, in combination with the suexec support program
allows CGI scripts to run as a specified user and Group. The "wrapper" support
program for the suexec behaviour for the Apache HTTP server is run from within
the server automatically to switch the user when an external program has to be
run under a different user.

http://httpd.apache.org/docs/current/mod/mod_suexec.html
http://httpd.apache.org/docs/current/programs/suexec.html

Install suExec support program apache2-suexec-custom, that can be configured
(apache2-suexec-pristine is preconfigured and compiled e.g. with document root
/var/www/html). This version of suexec reads a config file on every execution.
Therefore it is a bit slower than the standard suexec version.

sudo /usr/lib/apache2/suexec -V
 -D SUEXEC_CONFIG_DIR=/etc/apache2/suexec/
 -D AP_GID_MIN=100
 -D AP_LOG_EXEC="/var/log/apache2/suexec.log"
 -D AP_SAFE_PATH="/usr/local/bin:/usr/bin:/bin"
 -D AP_UID_MIN=100
  
man suexec-custom
man suexec-pristine

If suexec is called by a user with name <username>, it will look into
/etc/apache2/suexec/<username> for configuration. If the file does not
exist, suexec will abort.

Edit /etc/apache2/suexec/www-data:
The first line in the file is used as the document root and the second
line in the file is used as the suffix that is appended to users' home 
directories.
Document root shall contain fgci wrapper.

Enable apache module suexec
Add suExec configuration to virtual host config file.
Restart apache


*******************************************************************************
Benchmarking
------------

ApacheBench
ab -n 1000 -c 300 localhost/01

http://www.cyberciti.biz/tips/howto-performance-benchmarks-a-web-server.html


*******************************************************************************
Issues
------

Default web root directory /var/www/html is used
------------------------------------------------
It seems that it doesn't load virtual-host config from
/etc/apache2/sites-enabled/<SITE_CONFIG>

1. Upgrading from Ubuntu 12.04 to 14.04. In the old Apache 2.2 the file
/etc/apache2/apache2.conf had a Include sites-enabled/ whereas the new .conf
file has: IncludeOptional sites-enabled/*.conf
Add .conf to <SITE_CONFIG> name. 

2. New installation. Enable the new site config, disable 000-default and then
restart the server.


Forbidden is shown
------------------
1. Upgrading from Ubuntu 12.04 to 14.04 (Apache 2.2 - 2.4)
2. New installation

By default Apache 2.4 does not allow access to the root filesystem in
apache2.conf and introduces 'Require' command of hostz_... modules:

<Directory />
    Options FollowSymLinks
    AllowOverride None
    Require all denied
</Directory>

If your system is serving content from a sub-directory you must allow
access in apache2.conf or in any related virtual host. In Apache 2.4
mod-access-compat is required to process legacy Order, Allow. It seems
that the legacy commands cannot override 'Require' set in apache2.conf,
so it is necessary to use Require in virtual server configuration.


Drupal file permissions
-----------------------
suExec work only with fcgid.
localhost/tools/whoami should return <user>. It returns www-data if apache module
mod-php is enabled.
Check phpinfo():
  Server API: Apache 2.0 Handler - php5 module is enabled and active,
  then suexec doesn't work.
Disable mod-php and enabled mod-fcgid: a2dismod php5, a2enmod fcgid
Restart apache: service apache2 restart
Check phpinfo():
  Server API:  CGI/FastCGI


Timeout during waiting on breakpoint (for fcgid)
------------------------------------------------
See /var/log/apache2/error.log:
  mod_fcgid: read data timeout in 600 seconds.
Solution:
Increase FcgidIOTimeout in /etc/apache2/mods-available/fcgid.conf:
FcgidIOTimeout 1800 (30 minutes)


fcgid doesn't work
------------------
Empty PHP pages are served, no error log, mod-fcgid active, mod-php5 disabled,
fcgid setting in virtual host config file correct, it seems that FcgidWrapper
script is not called (no error when it contains invalid code), php5-cgi from
command line works fine. 

Check enabled configs and disable php5-cgi: a2disconf php5-cgi.


Internal Server Error after activating suExec
---------------------------------------------
check /var/log/apache2/error.log
check /var/log/apache2/suexec.log

Correct document root - it should contain fcgi wrapper script. 


Disk IO monitoring
------------------
Install sysstat

/proc/diskstats
per process
pidstat
-d  - Report I/O statistics
-l  - Display the process command name and all its arguments.

http://serverfault.com/questions/169676/howto-check-disk-i-o-utilisation-per-process

Set test config for mpm_prefork and limit servers to 1.

TODO...